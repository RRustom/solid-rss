{"version":3,"sources":["components/newFeedSource.module.scss","components/feedSourceList.module.scss","pages/home.module.scss","components/PodConnector.js","helpers/addFeed.js","helpers/byDate.js","helpers/getFeedSources.js","hooks/useDocument.js","components/FeedSource.js","components/NewFeedSource.js","components/FeedSourceList.js","components/Article.js","helpers/getArticles.js","components/Articles.js","pages/Profile.js","helpers/addArticle.js","components/SaveButton.js","helpers/fetchFeed.js","components/Feed.js","components/FeedList.js","components/Dashboard.js","pages/Home.js","helpers/getPodData.js","hooks/useProfile.js","App.js","index.js","App.module.scss","components/dashboard.module.scss","pages/profile.module.scss","components/feedList.module.scss"],"names":["module","exports","suggestedWebId","URLSearchParams","document","location","search","get","PodConnector","useState","chosenWebId","setWebId","onSubmit","event","preventDefault","SolidAuth","login","className","htmlFor","type","name","id","value","onChange","e","target","LoginButton","popup","addFeed","source","feedList","a","newFeed","addSubject","addRef","rdf","schema","DataFeed","addString","url","addDateTime","dateCreated","Date","now","save","byDate","itemA","itemB","updatedDateA","getDateTime","dateModified","updatedDateB","createdDateA","createdDateB","latestA","latestB","getTime","getFeedSources","feedSourcesList","getSubjectsOfType","useDocument","virtualDocument","setDocument","useEffect","fetchDocument","then","FeedSource","props","isSubmitting","setIsSubmitting","feedSource","getString","feedURL","setFeedURL","feedName","setFeedName","saveFeedSource","updatedName","updatedURL","mode","isLoading","required","disabled","onClick","onCancelEdit","NewFeedSource","onSave","styles","placeholder","FeedSourceList","podData","feedSourcesDoc","updateFeedList","React","useReducer","prevState","concat","filter","ref","feedInEditMode","setEditMode","updatedDoc","content","feedDocument","setString","text","setDateTime","asRef","getSubject","removeSubject","feedSourceElements","sort","map","feedSourceElement","updatedContent","editFeed","includes","title","action","role","src","editIcon","alt","deleteFeed","deleteIcon","container","item","Article","article","articleURL","articleName","href","getArticles","articlesList","WebPage","Articles","articlesDoc","setArticlesList","articlesDocument","articleListElements","deleteArticle","Profile","addArticle","newArticle","SaveButton","articleExists","some","isSaved","setIsSaved","saveArticle","fetchFeed","parser","Parser","parseURL","feed","items","Feed","setFeed","feedItems","getFeed","listItems","feedItem","link","FeedList","feedSources","sources","Dashboard","Home","showProfile","setShowProfile","webId","useWebId","useMemo","profileDoc","describeDocument","isFoundAt","profile","describeSubject","storage","describeContainer","isFoundOn","space","publicTypeIndex","solid","feedSourcesSubject","isEnsuredIn","withRef","TypeRegistration","forClass","articlesSubject","isEnsuredOn","instance","getPodData","undefined","setProfile","fetchedProfileDoc","useProfile","foaf","page","navContainer","nav","logoItems","logo","welcome","buttons","sshowProfile","class","profileButton","LogoutButton","contentContainer","App","LoggedIn","LoggedOut","center","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.9476e435.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"addFeed\":\"newFeedSource_addFeed__3jx03\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"feedSourceList_container__1fvDu\",\"item\":\"feedSourceList_item__1zbJ4\",\"feedSourceElement\":\"feedSourceList_feedSourceElement__12tOi\",\"action\":\"feedSourceList_action__1Pj5B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"home_page__2ZXon\",\"nav\":\"home_nav__Da3wD\",\"navContainer\":\"home_navContainer__35c_x\",\"welcome\":\"home_welcome__2-URb\",\"logo\":\"home_logo__3H0_E\",\"logoItems\":\"home_logoItems__1t_Jw\",\"buttons\":\"home_buttons__KU6p2\",\"profileButton\":\"home_profileButton__3Sf0M\",\"contentContainer\":\"home_contentContainer__mOXy5\",\"content\":\"home_content__UCOVS\"};","import { useState } from 'react';\nimport { LoginButton } from '@solid/react';\nimport SolidAuth from 'solid-auth-client';\n\nconst suggestedWebId = (URLSearchParams && document.location.search)\n  ? (new URLSearchParams(document.location.search)).get('webid')\n  : null;\n\nconst PodConnector = () => {\n  const [chosenWebId, setWebId] = useState(suggestedWebId);\n\n  if (suggestedWebId) {\n    const login = () => {\n      if (!chosenWebId) {\n        return;\n      }\n\n      SolidAuth.login(chosenWebId);\n    }\n\n    return (\n      <form onSubmit={(event) => {event.preventDefault(); login(); }}>\n        <div className=\"field\">\n          <div className=\"control\">\n            <label htmlFor=\"webid\" className=\"label\">Your WebID:</label>\n            <input\n              type=\"url\"\n              name=\"webid\"\n              id=\"webid\"\n              className=\"input is-large\"\n              value={chosenWebId || ''}\n              onChange={(e) => { e.preventDefault(); setWebId(e.target.value); }}\n            />\n          </div>\n        </div>\n        <div className=\"field\">\n          <div className=\"control\">\n            <input type=\"submit\" className=\"button is-primary is-large\" value=\"Connect\"/>\n          </div>\n        </div>\n      </form>\n    );\n  }\n\n  return <>\n    <LoginButton popup=\"popup.html\" className=\"button is-large is-primary\">Connect</LoginButton>\n  </>;\n}\n\nexport default PodConnector;\n","import { rdf, schema } from 'rdf-namespaces';\n\nconst addFeed = async (name, source, feedList) => {\n  const newFeed = feedList.addSubject();\n  newFeed.addRef(rdf.type, schema.DataFeed);\n  newFeed.addString(schema.name, name);\n  newFeed.addString(schema.url, source)\n  newFeed.addDateTime(schema.dateCreated, new Date(Date.now()))\n\n  return await feedList.save([newFeed]);\n}\n\nexport default addFeed;\n","import { schema } from 'rdf-namespaces';\n\nconst byDate = (itemA, itemB) => {\n  const updatedDateA = itemA.getDateTime(schema.dateModified);\n  const updatedDateB = itemB.getDateTime(schema.dateModified);\n  const createdDateA = itemA.getDateTime(schema.dateCreated);\n  const createdDateB = itemB.getDateTime(schema.dateCreated);\n\n  const latestA = updatedDateA ?? createdDateA;\n  const latestB = updatedDateB ?? createdDateB;\n  if (latestB === null) {\n    // No date known for B - A comes first\n    return -1;\n  }\n  if (latestA === null) {\n    // Date known for B but not for A - B comes first\n    return 1;\n  }\n\n  // Whichever was latest comes first:\n  return latestB.getTime() - latestA.getTime();\n}\n\nexport default byDate;\n","import { schema } from 'rdf-namespaces';\n\nconst getFeedSources = (feedSourcesList) => {\n  return feedSourcesList.getSubjectsOfType(schema.DataFeed);\n}\n\nexport default getFeedSources;\n","import { useState, useEffect } from 'react';\nimport { fetchDocument } from 'plandoc';\n\nexport const useDocument = (virtualDocument) => {\n  const [document, setDocument] = useState();\n\n  useEffect(() => {\n    fetchDocument(virtualDocument).then(setDocument);\n  }, [virtualDocument]);\n\n  return [document, setDocument];\n}\n","import { useState } from 'react';\nimport Markdown from 'react-markdown';\nimport { schema } from 'rdf-namespaces';\n\nconst FeedSource = (props) => {\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const [feedURL, setFeedURL] = useState(props.feedSource.getString(schema.url) || '');\n  const [feedName, setFeedName] = useState(props.feedSource.getString(schema.name) || '');\n\n  const saveFeedSource = async (event) => {\n    event.preventDefault();\n\n    setIsSubmitting(true);\n    const updatedName = await props.onChange(feedName);\n    if (updatedName) {\n      setFeedName(updatedName.getString(schema.name));\n    }\n\n    const updatedURL = await props.onChange(feedURL);\n    if (updatedURL) {\n      setFeedURL(updatedURL.getString(schema.url));\n    }\n    setIsSubmitting(false);\n  };\n\n  const cancelEdit = (event) => {\n    props.onCancelEdit();\n  };\n\n  if (props.mode === 'editing') {\n    const isLoading = isSubmitting ? 'is-loading' : '';\n\n    return <>\n      <form onSubmit={saveFeedSource} className=\"content\">\n        <div className=\"field\">\n          <div className=\"control\">\n          <label htmlFor=\"feedName\">Feed Name:</label>\n          <input\n            name=\"feedName\"\n            value={feedName}\n            onChange={(e) => { e.preventDefault(); setFeedName(e.target.value); }}\n            type=\"text\"\n            required\n          >\n          </input>\n          <label htmlFor=\"feedURL\">Feed URL:</label>\n          <input\n            name=\"feedURL\"\n            value={feedURL}\n            onChange={(e) => { e.preventDefault(); setFeedURL(e.target.value); }}\n            type=\"url\"\n            required\n          >\n          </input>\n          </div>\n        </div>\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className={`button is-primary ${isLoading}`}\n              disabled={isSubmitting}\n            >Save</button>\n          </div>\n          <div className=\"control\">\n            <button onClick={cancelEdit} className=\"button is-text\">\n              Cancel\n            </button>\n          </div>\n        </div>\n      </form>\n    </>;\n  }\n\n  return <>\n    <article className=\"card\">\n      <div className=\"section content\">\n        <div>\n          {feedName}\n        </div>\n        <div>\n          {feedURL}\n        </div>\n      </div>\n    </article>\n  </>;\n};\n\nexport default FeedSource;\n","import { useState } from 'react';\n\nimport styles from './newFeedSource.module.scss';\n\nconst NewFeedSource = ({ onSave }) => {\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const [feedURL, setFeedURL] = useState('');\n  const [feedName, setFeedName] = useState('');\n\n  const saveFeedSource = async (event) => {\n    event.preventDefault();\n\n    setIsSubmitting(true);\n    await onSave(feedName, feedURL);\n    setFeedURL('');\n    setFeedName('');\n    setIsSubmitting(false);\n  };\n\n  const isLoading = isSubmitting ? 'is-loading' : '';\n\n  return (\n    <div className={styles.addFeed}>\n      <form onSubmit={saveFeedSource}>\n        <div>\n          <div>\n            <label htmlFor=\"feedName\">Feed Name:</label>\n            <input\n              name=\"feedName\"\n              placeholder=\"EFF\"\n              value={feedName}\n              onChange={(e) => { e.preventDefault(); setFeedName(e.target.value); }}\n              type=\"text\"\n              required\n            >\n            </input>\n            <label htmlFor=\"feedURL\">Feed URL:</label>\n            <input\n              name=\"feedURL\"\n              placeholder=\"ex:https://www.eff.org/rss/updates.xml\"\n              value={feedURL}\n              onChange={(e) => { e.preventDefault(); setFeedURL(e.target.value); }}\n              type=\"url\"\n              required\n            >\n            </input>\n          </div>\n        </div>\n        <div>\n          <div>\n            <button\n              type=\"submit\"\n              className={`button is-primary ${isLoading}`}\n              disabled={isSubmitting}\n            >Add Feed</button>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default NewFeedSource;\n","import React from 'react';\nimport { schema } from 'rdf-namespaces';\nimport editIcon from 'material-design-icons/image/svg/production/ic_edit_24px.svg';\nimport deleteIcon from 'material-design-icons/action/svg/production/ic_delete_24px.svg';\n\nimport addFeed from '../helpers/addFeed';\nimport byDate from '../helpers/byDate';\nimport getFeedSources from '../helpers/getFeedSources';\nimport {useDocument} from '../hooks/useDocument';\nimport FeedSource from './FeedSource';\nimport NewFeedSource from './NewFeedSource';\n\nimport styles from './feedSourceList.module.scss';\n\nconst FeedSourceList = ({ podData }) => {\n  const [feedList, updateFeedList] = useDocument(podData.feedSourcesDoc);\n  const [feedInEditMode, setEditMode] = React.useReducer(\n    (prevState, [feedSource, editMode]) => {\n      if (editMode) {\n        return prevState.concat(feedSource);\n      }\n      return prevState.filter((ref) => ref !== feedSource);\n    },\n    [],\n  );\n\n  if (!feedList) {\n    return null;\n  }\n  const feedSourceList = getFeedSources(feedList);\n\n  async function saveFeed(name, source) {\n    if (!feedList) {\n      return;\n    }\n    const updatedDoc = await addFeed(name, source, feedList);\n    updateFeedList(updatedDoc);\n  }\n\n  async function editFeed(content, feedSource) {\n    const feedDocument = feedList;\n    if (!feedDocument) {\n      return;\n    }\n\n    feedSource.setString(schema.text, content);\n    feedSource.setDateTime(schema.dateModified, new Date(Date.now()));\n    const updatedDoc = await feedDocument.save();\n    if (updatedDoc) {\n      setEditMode([feedSource.asRef(), false])\n      updateFeedList(updatedDoc);\n    }\n    return updatedDoc.getSubject(feedSource.asRef());\n  }\n\n  async function deleteFeed(feedSource) {\n    const feedDocument = feedList;\n    if (!feedDocument) {\n      return;\n    }\n\n    feedDocument.removeSubject(feedSource.asRef());\n    const updatedDoc = await feedDocument.save();\n    updateFeedList(updatedDoc);\n  }\n\n  const feedSourceElements = feedSourceList.sort(byDate).map((feedSource) => (\n    <div key={feedSource.asRef()}>\n      <div className={styles.feedSourceElement}>\n          <FeedSource\n            feedSource={feedSource}\n            onChange={(updatedContent) => editFeed(updatedContent, feedSource)}\n            onCancelEdit={() => setEditMode([feedSource.asRef(), false])}\n            mode={feedInEditMode.includes(feedSource.asRef()) ? 'editing' : 'viewing'}\n          />\n        <div>\n          <div>\n            <a\n              onClick={() => setEditMode([feedSource.asRef(), true])}\n              title=\"Edit this feed\"\n              className={styles.action}\n              role=\"button\"\n            >\n              <span>\n                <img src={editIcon} alt=\"\"/>\n              </span>\n              Edit\n            </a>\n            <a\n              onClick={() => deleteFeed(feedSource)}\n              title=\"Delete this feed\"\n              className={styles.action}\n              role=\"button\"\n            >\n              <span>\n                <img src={deleteIcon} alt=\"\"/>\n              </span>\n              Delete\n            </a>\n          </div>\n        </div>\n      </div>\n      <hr/>\n    </div>\n  ));\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.item}>\n        <NewFeedSource onSave={saveFeed}/>\n      </div>\n      <div className={styles.item}>\n        {feedSourceElements}\n      </div>\n    </div>\n  );\n};\n\nexport default FeedSourceList;\n","import { useState } from 'react';\nimport { schema } from 'rdf-namespaces';\n\nconst Article = ({ article }) => {\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  if (!article) {\n    return null;\n  }\n\n  const articleURL = article.getString(schema.url)\n  const articleName = article.getString(schema.name)\n\n  return <>\n    <article className=\"card\">\n      <div className=\"section content\">\n        <a href={articleURL}>{articleName}</a>\n      </div>\n    </article>\n  </>;\n};\n\nexport default Article;\n","import { schema } from 'rdf-namespaces';\n\nconst getArticles = (articlesList) => {\n  return articlesList.getSubjectsOfType(schema.WebPage);\n}\n\nexport default getArticles;\n","import React from 'react';\nimport deleteIcon from 'material-design-icons/action/svg/production/ic_delete_24px.svg';\n\nimport Article from './Article';\n\nimport {useDocument} from '../hooks/useDocument';\nimport byDate from '../helpers/byDate'\nimport getArticles from '../helpers/getArticles';\n\nimport styles from './feedSourceList.module.scss';\n\nconst Articles = ({ podData }) => {\n  const [articlesList, setArticlesList] = useDocument(podData.articlesDoc);\n\n  if (!articlesList) {\n    return null;\n  }\n\n  const articles = getArticles(articlesList);\n\n  async function deleteArticle(article) {\n    const articlesDocument = articlesList;\n    if (!articlesDocument) {\n      return;\n    }\n\n    articlesDocument.removeSubject(article.asRef());\n    const updatedDoc = await articlesDocument.save();\n    setArticlesList(updatedDoc);\n  }\n\n  const articleListElements = articles.sort(byDate).map((article) => (\n    <div key={article.asRef()}>\n      <div className={styles.feedSourceElement}>\n        <Article article={article} />\n        <div>\n          <a\n            onClick={() => deleteArticle(article)}\n            title=\"Delete this article\"\n            className={styles.action}\n            role=\"button\"\n          >\n            <span>\n              <img src={deleteIcon} alt=\"\"/>\n            </span>\n            Delete\n          </a>\n        </div>\n      </div>\n      <hr/>\n    </div>\n  ));\n\n  return (\n    <div className={styles.container}>\n      {articleListElements}\n    </div>\n  );\n};\n\nexport default Articles;\n","import FeedSourceList from '../components/FeedSourceList';\nimport Articles from '../components/Articles';\n\nimport styles from './profile.module.scss';\n\nconst Profile = ({ podData }) => {\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.content}>\n      <h2>Feeds </h2>\n      <FeedSourceList podData={podData} />\n      <h2>Saved Articles </h2>\n      <Articles podData={podData} />\n      </div>\n    </div>\n  )\n}\n\nexport default Profile;\n","import { rdf, schema } from 'rdf-namespaces';\n\nconst addArticle = async (articleName, articleURL, articlesList) => {\n  const newArticle = articlesList.addSubject();\n  newArticle.addRef(rdf.type, schema.WebPage);\n  newArticle.addString(schema.name, articleName);\n  newArticle.addString(schema.url, articleURL)\n\n  return await articlesList.save([newArticle]);\n}\n\nexport default addArticle;\n","import { useState } from 'react';\nimport { schema } from 'rdf-namespaces';\n\nimport addArticle from '../helpers/addArticle';\nimport getArticles from '../helpers/getArticles';\n\nconst SaveButton = ({ articleName, articleURL, articlesList }) => {\n\n  const articles = getArticles(articlesList)\n\n  const articleExists = articles.some(article => article.getString(schema.url) === articleURL)\n\n  const [isSaved, setIsSaved] = useState(articleExists)\n\n  const saveArticle = async (name, url) => {\n    const updatedArticles = await addArticle(name, url, articlesList);\n  }\n\n  const handleSave = (e) => {\n    e.preventDefault();\n    saveArticle(articleName, articleURL);\n    setIsSaved(true);\n  }\n\n  return (\n    <div>\n      <button\n        type='button'\n        disabled={isSaved}\n        onClick={handleSave}\n      >\n        {isSaved ? 'Saved!' : 'Save'}\n      </button>\n    </div>\n  )\n}\n\nexport default SaveButton;\n","import Parser from 'rss-parser'\n\nconst CORS_PROXY = \"https://cors-anywhere.herokuapp.com/\";\n\nexport const fetchFeed = async (url) => {\n  let parser = new Parser();\n  let feed = await parser.parseURL(CORS_PROXY + url);\n  return feed.items;\n}\n","import { useState, useEffect } from 'react';\n\nimport SaveButton from './SaveButton';\nimport { fetchFeed } from '../helpers/fetchFeed.js';\n\nimport styles from './feedList.module.scss';\n\nconst Feed = ({ feedSource, feedName, articlesList }) => {\n  const [feed, setFeed] = useState([]);\n\n  useEffect(() => {\n    const getFeed = async () => {\n      const feedItems = await fetchFeed(feedSource)\n      setFeed([...feed, ...feedItems])\n    }\n    getFeed()\n  }, []);\n\n  const listItems = feed.map(item =>\n    <div key={item.link} className={styles.feedItem}>\n      <div>\n        <span>\n          [{feedName}]&nbsp;\n        </span>\n        <a href={item.link}>{item.title}</a>\n        &nbsp;\n      </div>\n      <SaveButton articleName={item.title} articleURL={item.link} articlesList={articlesList}/>\n    </div>\n  )\n\n  return (\n    <div className={styles.container}>\n      {listItems}\n    </div>\n  )\n}\n\nexport default Feed;\n","import React from 'react';\nimport { schema } from 'rdf-namespaces';\n\nimport {useDocument} from '../hooks/useDocument';\n\nimport getArticles from '../helpers/getArticles';\nimport getFeedSources from '../helpers/getFeedSources';\n\nimport Feed from './Feed.js';\n\nimport styles from './dashboard.module.scss';\n\nconst FeedList = ({ podData }) => {\n  const [feedSources, updateFeedSources] = useDocument(podData.feedSourcesDoc);\n  const [articlesList, setArticlesList] = useDocument(podData.articlesDoc);\n\n  if (!feedSources) {\n    return null;\n  }\n  const sources = getFeedSources(feedSources);\n\n  const articles = articlesList ? getArticles(articlesList) : null;\n\n  const listItems = sources.map(source => {\n    const url = source.getString(schema.url)\n    const name = source.getString(schema.name)\n\n    return (\n      <li key={url}>\n        <Feed feedSource={url} feedName={name} articlesList={articlesList} />\n      </li>\n    )\n  })\n\n  return (\n    <div>\n      <ul>\n        {listItems}\n      </ul>\n    </div>\n  )\n}\n\nexport default FeedList;\n","import React from 'react';\n\nimport FeedList from './FeedList';\n\nimport styles from './dashboard.module.scss';\n\nconst Dashboard = ({ podData }) => {\n\n  return (\n    <div className={styles.container}>\n      <FeedList podData={podData} />\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import { useMemo, useState } from 'react';\nimport { LogoutButton, useWebId } from '@solid/react';\nimport { foaf } from 'rdf-namespaces';\n\nimport Profile from '../pages/Profile';\nimport Dashboard from '../components/Dashboard';\nimport { useProfile } from '../hooks/useProfile';\nimport { getPodData } from '../helpers/getPodData';\n\nimport styles from './home.module.scss';\n\nconst Home = () => {\n  const [showProfile, setShowProfile] = useState(false);\n  const webId = useWebId();\n  const podData = useMemo(() => (typeof webId === 'string') ? getPodData(webId) : undefined, [webId]);\n  const profile = useProfile(podData);\n\n  if (!podData) {\n    return (\n      <section className=\"section\">\n        <p className=\"content\">Loading data&hellip;</p>\n      </section>\n    );\n  }\n\n  const name = (profile) ? profile.getString(foaf.name) : null;\n\n  const handleClick = (e) => {\n    e.preventDefault()\n    setShowProfile(sshowProfile => !showProfile)\n  }\n\n  const title = (name)\n    ? `Welcome to your feed, ${name}`\n    : 'Feed';\n\n  return (\n    <div className={styles.page}>\n      <div className={styles.navContainer}>\n        <div className={styles.nav}>\n          <div className={styles.logoItems}>\n            <h1 className={styles.logo}>\n              Solid RSS\n            </h1>\n            <p>\n              <a\n                href=\"https://github.com/RRustom/solid-rss\"\n                title=\"View the source code on GitHub\"\n              >Source code</a>\n            </p>\n          </div>\n          <h2 className={styles.welcome}>\n            {title}\n          </h2>\n\n          <div className={styles.buttons}>\n            <button\n              type=\"button\"\n              onClick={handleClick}\n              class={styles.profileButton}\n            >\n              {showProfile ? \"Feed\" : \"Profile\"}\n            </button>\n            <LogoutButton />\n          </div>\n        </div>\n      </div>\n      <div className={styles.contentContainer}>\n        {\n          showProfile ? <Profile name={name} podData={podData} />: <Dashboard name={name} podData={podData}/>\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default Home;\n","import { describeSubject, describeDocument, describeContainer } from 'plandoc';\nimport { space, solid, rdf, schema } from 'rdf-namespaces';\n\nexport const getPodData = (webId) => {\n  const profileDoc = describeDocument().isFoundAt(webId);\n  const profile = describeSubject().isFoundAt(webId);\n\n  const storage = describeContainer().isFoundOn(profile, space.storage);\n\n  const publicTypeIndex = describeDocument().isFoundOn(profile, solid.publicTypeIndex)\n\n  const feedSourcesSubject = describeSubject()\n    .isEnsuredIn(publicTypeIndex)\n    .withRef(rdf.type, solid.TypeRegistration)\n    .withRef(solid.forClass, schema.DataFeed)\n\n  const articlesSubject = describeSubject()\n    .isEnsuredIn(publicTypeIndex)\n    .withRef(rdf.type, solid.TypeRegistration)\n    .withRef(solid.forClass, schema.WebPage)\n\n  const feedSourcesDoc = describeDocument()\n    .isEnsuredOn(feedSourcesSubject, solid.instance, storage);\n\n  const articlesDoc = describeDocument()\n    .isEnsuredOn(articlesSubject, solid.instance, storage);\n\n  return {\n    webId,\n    profileDoc,\n    publicTypeIndex,\n    feedSourcesDoc,\n    articlesDoc\n  };\n}\n","import { useEffect, useState } from 'react';\nimport { fetchDocument } from 'plandoc';\n\nexport const useProfile = (podData) => {\n  const [profile, setProfile] = useState();\n\n  useEffect(() => {\n    if (!podData) {\n      return;\n    }\n\n    fetchDocument(podData.profileDoc).then((fetchedProfileDoc) => {\n      const profile = fetchedProfileDoc?.getSubject(podData.webId);\n      if (!fetchedProfileDoc || !profile) {\n        return;\n      }\n      setProfile(profile);\n    });\n  }, [podData]);\n\n  return profile;\n}\n\n//export default useProfile;\n","import { useEffect, useState } from 'react';\nimport { LoggedIn, LoggedOut, LoginButton, useWebId } from '@solid/react';\n\nimport PodConnector from './components/PodConnector';\n\nimport Home from './pages/Home';\n\nimport styles from './App.module.scss'\n\nconst App = () => {\n  return (\n    <div className={styles.page}>\n      <LoggedIn >\n        <Home />\n      </LoggedIn>\n      <LoggedOut>\n        <div className={styles.center}>\n          <div className={styles.login}>\n          <h1> A simple RSS reader for Solid </h1>\n          <p className=\"content\">Connect to your Pod to begin.</p>\n          <PodConnector/>\n          </div>\n        </div>\n      </LoggedOut>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nimport './styles/global.scss';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"App_page__1AVsN\",\"center\":\"App_center__3qpZh\",\"login\":\"App_login__2Y3DD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"dashboard_container__2bVR6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"profile_container__2iu_i\",\"content\":\"profile_content__3xgVy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"feedList_container__3oym2\",\"feedItem\":\"feedList_feedItem__1NIfY\"};"],"sourceRoot":""}